name: 1.2$(rev:.r)

trigger: none
pr: none

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/TeePee.sln'
  buildConfiguration: 'Release'
  versionSuffix: '' #prefix with hyphen, e.g. -beta
  autoPublishToNuGet: true

steps:

- task: DotNetCoreCLI@2
  displayName: 'Build Solution'
  inputs:
    command: 'build'
    projects: '$(solution)'
    arguments: '-c $(buildConfiguration) /p:Version=$(Build.BuildNumber)$(versionSuffix)'

- task: DotNetCoreCLI@2
  displayName: 'Unit Tests'
  inputs:
    command: 'test'
    projects: 'TeePee/*[Tt]ests/*.csproj'
    arguments: '-c $(buildConfiguration) --no-build'

# Using direct dotnet command as I had Nupkg file name issues with DotNetCoreCLI pack task.
- task: PowerShell@2
  displayName: Package NuGet
  inputs:
    targetType: 'inline'
    script: |
      dotnet pack TeePee/TeePee/TeePee.csproj -c $(buildConfiguration) --no-build -o $(Build.ArtifactStagingDirectory) /p:Version=$(Build.BuildNumber)$(versionSuffix)

- task: PublishBuildArtifacts@1
  displayName: Publish NuGet Package
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'TeePee.Package'
    publishLocation: 'Container'
    
# https://docs.microsoft.com/en-us/nuget/quickstart/create-and-publish-a-package-using-the-dotnet-cli#publish-with-dotnet-nuget-push
# https://github.com/NuGet/Home/issues/1234 - no option to push as unlisted
- task: PowerShell@2
  displayName: 'Deploy to NuGet.org'
  condition: and(succeeded(), eq(variables['autoPublishToNuGet'], 'true'))
  inputs:
    targetType: 'inline'
    script: 'dotnet nuget push ''$(Build.ArtifactStagingDirectory)\*.nupkg'' --api-key $(nugetApiKey) --source ''https://api.nuget.org/v3/index.json'''
